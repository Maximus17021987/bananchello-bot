import telebot
from telebot import types
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

BORYA_CHAT_ID = int(os.getenv("BORYA_CHAT_ID"))
PICKUP_ADDRESS = os.getenv("PICKUP_ADDRESS")
CARD_NUMBER = os.getenv("CARD_NUMBER")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üçå –ó–∞–∫–∞–∑–∞—Ç—å")
    markup.row("üòÇ –ê–Ω–µ–∫–¥–æ—Ç", "üë®‚Äçüíª –°–æ–∑–¥–∞—Ç–µ–ª—å")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ë–∞–Ω–∞–Ω—á–µ–ª–ª—ã! –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup)

# –ö–Ω–æ–ø–∫–∞: –ó–∞–∫–∞–∑–∞—Ç—å
@bot.message_handler(func=lambda message: message.text == "üçå –ó–∞–∫–∞–∑–∞—Ç—å")
def begin_order(message):
    user_data[message.chat.id] = {'quantity': 1}
    with open("static/banan.png", 'rb') as photo:
        markup = types.InlineKeyboardMarkup()
        markup.row(
            types.InlineKeyboardButton("‚ûñ", callback_data="decrease"),
            types.InlineKeyboardButton("1 —à—Ç. ‚Äî 999‚ÇΩ", callback_data="none"),
            types.InlineKeyboardButton("‚ûï", callback_data="increase")
        )
        bot.send_photo(
            message.chat.id,
            photo,
            caption="üçå –•–û–ß–£ –ë–ê–ù–ê–ù–ß–ï–õ–õ–ò–¢–¨!\n\n–í—ã–±–µ—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:",
            reply_markup=markup
        )

# –ö–Ω–æ–ø–∫–∞: –ê–Ω–µ–∫–¥–æ—Ç
@bot.message_handler(func=lambda message: message.text == "üòÇ –ê–Ω–µ–∫–¥–æ—Ç")
def send_joke(message):
    bot.send_message(
        message.chat.id,
        "üòÇ –ü–æ—á–µ–º—É –±–∞–Ω–∞–Ω –ø–æ—à—ë–ª –∫ –¥–æ–∫—Ç–æ—Ä—É?\n–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–µ –º–æ–≥ –Ω–∞–π—Ç–∏ —Å–≤–æ—é –∫–æ–∂—É—Ä—É! üçå"
    )

# –ö–Ω–æ–ø–∫–∞: –°–æ–∑–¥–∞—Ç–µ–ª—å
@bot.message_handler(func=lambda message: message.text == "üë®‚Äçüíª –°–æ–∑–¥–∞—Ç–µ–ª—å")
def creator_info(message):
    bot.send_message(
        message.chat.id,
        "–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª –Ω–∞—á–∏–Ω–∞—é—â–∏–π IT –≥–µ–Ω–∏–π, –≥—É—Ä—É –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏–∏ @PuraVidaMan"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    data = call.data
    if chat_id not in user_data:
        user_data[chat_id] = {'quantity': 1}
    quantity = user_data[chat_id]['quantity']

    if data == "increase" and quantity < 100:
        quantity += 1
    elif data == "decrease" and quantity > 1:
        quantity -= 1
    elif data == "pay":
        price = quantity * 999
        msg = (
            f"‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n"
            f"üì¶ {quantity} —à—Ç. √ó 999 ‚ÇΩ = {price}‚ÇΩ\n"
            f"üí≥ –ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∫–∞—Ä—Ç—É: {CARD_NUMBER} (–Ø–Ω–¥–µ–∫—Å –ë–∞–Ω–∫)\n"
            f"üìç –°–∞–º–æ–≤—ã–≤–æ–∑: {PICKUP_ADDRESS}\n\n"
            f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–Ø –æ–ø–ª–∞—Ç–∏–ª'"
        )
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="paid"))
        bot.edit_message_caption(chat_id=chat_id, message_id=call.message.message_id, caption=msg, reply_markup=markup)
        user_data[chat_id]['quantity'] = quantity
        return
    elif data == "paid":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn = types.KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)
        markup.add(btn)
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã", reply_markup=markup)
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    user_data[chat_id]['quantity'] = quantity
    price = quantity * 999
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("‚ûñ", callback_data="decrease"),
        types.InlineKeyboardButton(f"{quantity} —à—Ç. ‚Äî {price}‚ÇΩ", callback_data="none"),
        types.InlineKeyboardButton("‚ûï", callback_data="increase")
    )
    markup.add(types.InlineKeyboardButton("‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay"))

    try:
        bot.edit_message_reply_markup(chat_id, call.message.message_id, reply_markup=markup)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫:", e)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ë–æ—Ä–µ
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if not message.contact:
        bot.send_message(message.chat.id, "‚ùå –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        start(message)
        return

    phone = message.contact.phone_number
    username = f"@{message.from_user.username}" if message.from_user.username else "–ë–µ–∑ username"
    quantity = user_data.get(message.chat.id, {}).get('quantity', '?')

    notif = (
        f"üçå –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {username}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üì¶ –ö–æ–ª-–≤–æ: {quantity} —à—Ç.\n"
        f"üìç –°–∞–º–æ–≤—ã–≤–æ–∑: {PICKUP_ADDRESS}"
    )

    try:
        bot.send_message(BORYA_CHAT_ID, notif)
        bot.send_message(message.chat.id, "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É!")
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ë–æ—Ä–µ: {notif}")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ë–æ—Ä–µ:", e)
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É.")

    # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
    start(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –ë–∞–Ω–∞–Ω—á–µ–ª–ª—ã –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
